## Ultralytics YOLO ðŸš€, AGPL-3.0 license
## YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect
#
## Parameters
#nc: 20  # number of classes
#scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
#  # [depth, width, max_channels]
#  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
#  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
#  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
#  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
#  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs
#
## YOLOv8.0n backbone
#backbone:
#  # [from, repeats, module, args]
#  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
#  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
#  - [-1, 3, C2f, [128, True]]
#  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
#  - [-1, 6, C2f, [256, True]]
#  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
#  - [-1, 6, C2f, [512, True]]
#  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
#  - [-1, 3, C2f, [1024, True]]
#  - [-1, 1, SPPF, [1024, 5]]  # 9
#
## YOLOv8.0n head
#head:
#  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#  - [[-1, 6], 1, Concat, [1]]  # cat backbone P4
#  - [-1, 3, C2f, [512]]  # 12
#
#  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#  - [[-1, 4], 1, Concat, [1]]  # cat backbone P3
#  - [-1, 3, C2f, [256]]  # 15 (P3/8-small)
#
#  - [-1, 1, Conv, [256, 3, 2]]
#  - [[-1, 12], 1, Concat, [1]]  # cat head P4
#  - [-1, 3, C2f, [512]]  # 18 (P4/16-medium)
#
#  - [-1, 1, Conv, [512, 3, 2]]
#  - [[-1, 9], 1, Concat, [1]]  # cat head P5
#  - [-1, 3, C2f, [1024]]  # 21 (P5/32-large)
#
#  - [[15, 18, 21], 1, Detect, [nc]]  # Detect(P3, P4, P5)

# YOLOv5 ðŸš€ by Ultralytics, GPL-3.0 license# Parameters
nc: 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple
anchors:- [10,13, 16,30, 33,23]  # P3/8- [30,61, 62,45, 59,119]  # P4/16- [116,90, 156,198, 373,326]  # P5/32# Mobilenetv3-small backbone# MobileNetV3_InvertedResidual [out_ch, hid_ch, k_s, stride, SE, HardSwish]
backbone:
# [from, number, module, args]
  [[-1, 1, Conv_BN_HSwish, [16, 2]],                              # 0-p1/2
   [-1, 1, MobileNetV3_InvertedResidual, [16,  16, 3, 2, 1, 0]],  # 1-p2/4
   [-1, 1, MobileNetV3_InvertedResidual, [24,  72, 3, 2, 0, 0]],  # 2-p3/8
   [-1, 1, MobileNetV3_InvertedResidual, [24,  88, 3, 1, 0, 0]],  # 3
   [-1, 1, MobileNetV3_InvertedResidual, [40,  96, 5, 2, 1, 1]],  # 4-p4/16
   [-1, 1, MobileNetV3_InvertedResidual, [40, 240, 5, 1, 1, 1]],  # 5
   [-1, 1, MobileNetV3_InvertedResidual, [40, 240, 5, 1, 1, 1]],  # 6
   [-1, 1, MobileNetV3_InvertedResidual, [48, 120, 5, 1, 1, 1]],  # 7
   [-1, 1, MobileNetV3_InvertedResidual, [48, 144, 5, 1, 1, 1]],  # 8
   [-1, 1, MobileNetV3_InvertedResidual, [96, 288, 5, 2, 1, 1]],  # 9-p5/32
   [-1, 1, MobileNetV3_InvertedResidual, [96, 576, 5, 1, 1, 1]],  # 10
   [-1, 1, MobileNetV3_InvertedResidual, [96, 576, 5, 1, 1, 1]],  # 11
  ]
# YOLOv5 v6.0 head
head:
  [[-1, 1, Conv, [96, 1, 1]],  # 12
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 8], 1, Concat, [1]],  # cat backbone P4
   [-1, 3, C3, [144, False]],  # 15
   [-1, 1, Conv, [144, 1, 1]], # 16
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 3], 1, Concat, [1]],  # cat backbone P3
   [-1, 3, C3, [168, False]],  # 19 (P3/8-small)
   [-1, 1, Conv, [168, 3, 2]],
   [[-1, 16], 1, Concat, [1]], # cat head P4
   [-1, 3, C3, [312, False]],  # 22 (P4/16-medium)
   [-1, 1, Conv, [312, 3, 2]],
   [[-1, 12], 1, Concat, [1]], # cat head P5
   [-1, 3, C3, [408, False]],  # 25 (P5/32-large)

   [[19, 22, 25], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)]